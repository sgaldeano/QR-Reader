import 'package:flutter/material.dart';
import 'package:s10_qr_reader/providers/db_provider.dart';
import '../models/models.dart' show QRCodeScan;

class ScansListProvider extends ChangeNotifier {

  List<QRCodeScan> currentScans = [];
  String selectedType = QRCodeScan.url;

  Future<QRCodeScan> newScan(String value) async {
    final newScan = QRCodeScan(value: value);

    final id = await DBProvider.instance.insertScanRaw(newScan);

    //Assignment of the id autogenerated in the insert method of the database.
    newScan.id = id;

    if (selectedType == newScan.type) {
      currentScans.add(newScan);
      notifyListeners();
    }

    return newScan;
  }

  Future loadScans() async {
    //Implementation in separated lines:
    final scans = await DBProvider.instance.getAllScans();
    currentScans = [...scans];
    notifyListeners();

    //Implementation in one line:
    // await DBProvider.instance.getAllScans().then((scans) => this.scans = [...scans]);
    // notifyListeners();
  }

  Future loadScansByType(String type) async {
    selectedType = type;

    //Implementation in separated lines:
    final scans = await DBProvider.instance.getScansByType(type);
    currentScans = [...scans];
    notifyListeners();

    //Implementation in one line:
    // await DBProvider.instance.getScansByType(type).then((scans) => this.scans = [...scans]);
    // notifyListeners();
  }

  Future deleteAllScans() async {
    await DBProvider.instance.deleteAllScans();
    currentScans = [];
    notifyListeners();
  }

  Future deleteScanById(int id) async {
    await DBProvider.instance.deleteScan(id);
    loadScansByType(selectedType);
  }

}